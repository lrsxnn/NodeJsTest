// source: cliReq.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var lsEnum_pb = require('./lsEnum_pb.js');
goog.object.extend(proto, lsEnum_pb);
var gameProto_pb = require('./gameProto_pb.js');
goog.object.extend(proto, gameProto_pb);
goog.exportSymbol('proto.lspb.CliReq', null, global);
goog.exportSymbol('proto.lspb.ClientMsgType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lspb.CliReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lspb.CliReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lspb.CliReq.displayName = 'proto.lspb.CliReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lspb.CliReq.prototype.toObject = function(opt_includeInstance) {
  return proto.lspb.CliReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lspb.CliReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lspb.CliReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    moduleid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    methodid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    clienterroom: (f = msg.getClienterroom()) && gameProto_pb.CliEnterRoom.toObject(includeInstance, f),
    cliinitover: (f = msg.getCliinitover()) && gameProto_pb.CliInitOver.toObject(includeInstance, f),
    clioperate: (f = msg.getClioperate()) && gameProto_pb.CliOperate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lspb.CliReq}
 */
proto.lspb.CliReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lspb.CliReq;
  return proto.lspb.CliReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lspb.CliReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lspb.CliReq}
 */
proto.lspb.CliReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {!proto.lspb.ModuleId} */ (reader.readEnum());
      msg.setModuleid(value);
      break;
    case 3:
      var value = /** @type {!proto.lspb.ClientMsgType} */ (reader.readEnum());
      msg.setMethodid(value);
      break;
    case 101:
      var value = new gameProto_pb.CliEnterRoom;
      reader.readMessage(value,gameProto_pb.CliEnterRoom.deserializeBinaryFromReader);
      msg.setClienterroom(value);
      break;
    case 102:
      var value = new gameProto_pb.CliInitOver;
      reader.readMessage(value,gameProto_pb.CliInitOver.deserializeBinaryFromReader);
      msg.setCliinitover(value);
      break;
    case 103:
      var value = new gameProto_pb.CliOperate;
      reader.readMessage(value,gameProto_pb.CliOperate.deserializeBinaryFromReader);
      msg.setClioperate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lspb.CliReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lspb.CliReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lspb.CliReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lspb.CliReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getModuleid();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMethodid();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getClienterroom();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      gameProto_pb.CliEnterRoom.serializeBinaryToWriter
    );
  }
  f = message.getCliinitover();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      gameProto_pb.CliInitOver.serializeBinaryToWriter
    );
  }
  f = message.getClioperate();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      gameProto_pb.CliOperate.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 userId = 1;
 * @return {number}
 */
proto.lspb.CliReq.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ModuleId moduleId = 2;
 * @return {!proto.lspb.ModuleId}
 */
proto.lspb.CliReq.prototype.getModuleid = function() {
  return /** @type {!proto.lspb.ModuleId} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.lspb.ModuleId} value
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.setModuleid = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ClientMsgType methodId = 3;
 * @return {!proto.lspb.ClientMsgType}
 */
proto.lspb.CliReq.prototype.getMethodid = function() {
  return /** @type {!proto.lspb.ClientMsgType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.lspb.ClientMsgType} value
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.setMethodid = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional CliEnterRoom cliEnterRoom = 101;
 * @return {?proto.lspb.CliEnterRoom}
 */
proto.lspb.CliReq.prototype.getClienterroom = function() {
  return /** @type{?proto.lspb.CliEnterRoom} */ (
    jspb.Message.getWrapperField(this, gameProto_pb.CliEnterRoom, 101));
};


/**
 * @param {?proto.lspb.CliEnterRoom|undefined} value
 * @return {!proto.lspb.CliReq} returns this
*/
proto.lspb.CliReq.prototype.setClienterroom = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.clearClienterroom = function() {
  return this.setClienterroom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lspb.CliReq.prototype.hasClienterroom = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional CliInitOver cliInitOver = 102;
 * @return {?proto.lspb.CliInitOver}
 */
proto.lspb.CliReq.prototype.getCliinitover = function() {
  return /** @type{?proto.lspb.CliInitOver} */ (
    jspb.Message.getWrapperField(this, gameProto_pb.CliInitOver, 102));
};


/**
 * @param {?proto.lspb.CliInitOver|undefined} value
 * @return {!proto.lspb.CliReq} returns this
*/
proto.lspb.CliReq.prototype.setCliinitover = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.clearCliinitover = function() {
  return this.setCliinitover(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lspb.CliReq.prototype.hasCliinitover = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional CliOperate cliOperate = 103;
 * @return {?proto.lspb.CliOperate}
 */
proto.lspb.CliReq.prototype.getClioperate = function() {
  return /** @type{?proto.lspb.CliOperate} */ (
    jspb.Message.getWrapperField(this, gameProto_pb.CliOperate, 103));
};


/**
 * @param {?proto.lspb.CliOperate|undefined} value
 * @return {!proto.lspb.CliReq} returns this
*/
proto.lspb.CliReq.prototype.setClioperate = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lspb.CliReq} returns this
 */
proto.lspb.CliReq.prototype.clearClioperate = function() {
  return this.setClioperate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lspb.CliReq.prototype.hasClioperate = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * @enum {number}
 */
proto.lspb.ClientMsgType = {
  ERRORCLIENTTYPE: 0,
  CLIENTERROOM: 101,
  CLIINITOVER: 102,
  CLIOPERATE: 103
};

goog.object.extend(exports, proto.lspb);
